=encoding utf-8
=head1 NAME

dealer - bridge hand generator

=head1 SYNOPSIS

B<dealer> [-023ehuvmqVC] [-p I<n>] [-g I<n>] [-r S<name>] [-s I<seed>] [-i S<rng>] [-i I<n1>,-I<n2>,...,-I<n52>] [-l I<n>] [I<inputfile>]

=head1 DESCRIPTION AND EXAMPLE

The program dealer can be used to generate hands for partnerships bidding training or for generating
statistics that can be used to design conventions, or win postmortems.

Running the program involves 3 steps. First, the user has to write an input file containing
hand-descriptions and action. A very simple example would look something like:

    condition shape(north, any 4333 + any 4423) and hcp(north)>=19
    action printall

The first line specifies a condition for the north hand, in this case, a hand with 4333 or 4432 shape
and at least 19 high card points. The second line tells the program to print the 4 hands. The program
reads from standard input, so in principle, it is possible to enter the conditions directly into the
program. Using a file is a lot more practical though, as it allows the user to re-use conditions and
fine-tune the conditions.

Then the program has to be run, it reads the file, looks at the various command line switches and then
produces a number of hands. The output appears on the screen but can be re-directed to a file.

Finally, the user has to look at output and analyze the produced hands. Alternatively, the output can
be used for a playing program.

=head1 OPTIONS

=over

=item B<-e>

Exhaust mode generates all possible combinations for two unknown hands. The
generation is very fast because no random numbers are involved. It possible
to generate all 10 400 600 hands in less than 10 seconds on any modern computer.

=item B<-g> I<number>

Maximum number of hands to generate (default is 1000000).

=item B<-l> I<number>

Instead of shuffling, deals are read from the file library.dat by M. Ginsberg
(see [1]). When using this, the tricks() function is quite fast and bridge.exe
from GIB is not used.

[1] ftp://ftp.cirl.uoregon.edu/pub/users/ginsberg/bridge/

=item B<-m>

Shows a progress meter.

=item B<-p> I<number>

Maximum number of hands to produce (default is 40).

=item B<-q>

Suppress PBN output (useful for testing, then switch it back on when generating the "final" sample).

=item B<-r> S<name>

Select the random number generator used for hand generation. Possible values
are 'pcg' and 'dev'. 'pcg' uses pcg32 random number generator.  'dev' uses
std::random_device generator which provides indeterministic random numbers.

=item B<-s> I<number>

Uses number as the seed for the random generator, running the program twice
with the same seed will produce the same sequence of hands.

=item B<-i> S<rng>

Initial pack order using system random number generator (std::random_device).

=item B<-i> S<c1>S<c2>...S<c52>

Initial pack order given as list of cards. First character is the suit symbol
[SHDCshdc♠♥♦♣♤♡♢♧] and second character is the rank [23456789TJQKA].

=item B<-u>

Select uppercase for the symbols "AKQJT" (default is lowercase).

=item B<-v>

Toggle verbose output, prints statistics at the end of the run (default is on).

=item B<-V>

Emit a version-identification string and exit.

=item B<-h>

Help, prints the syntax.

=item B<-0>

No swapping, each deal is generated normally (shuffling) (default).

=item B<-2>

2-way swapping, after each shuffle another deal is generated by permuting E and
W, leaving N and S in place (NB: not fully compatible with predeal).

=item B<-3>

3-way swapping, after each shuffle another 5 deals are generated by permuting
E, W, and S every which way, leaving N in place (NB: not fully compatible with
predeal).

=item B<-C>

Use "C" locale for output. Useful option to specify when output is used as input to another program.

=back

=head1 BUGS

I would prefer if you did B<not> use this program for generating hands
for tournaments. I have not investigated the random number generation
closely enough for me to be comfortable with that thought.

=head1 SEE ALSO

F</usr/share/doc/dealer/Manual>,
dealer.dpp(6),
deal(6).

=head1 AUTHORS

=over

=item Hans van Staveren <sater@sater.home.cs.vu.nl>

=item Henk Uijterwaal <henk@ripe.net>

=item Manpage: Christoph Berg <cb@df7cb.de>

=back

=head1 COPYRIGHT AND LICENSE

This program is hereby put in the public domain. Do with it whatever
you want, but I would like you not to redistribute it in modified form
without mentioning the fact of modification. I will accept bug reports
and modification requests, without any obligation of course, but fixing
bugs someone else put in is beyond me.

